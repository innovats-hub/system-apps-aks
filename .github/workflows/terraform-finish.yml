name: Cluster Manager Finish Provisioning

on:
  push:
    branches:
      - pending

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_backend_resource_group_name: ${{ vars.TF_VAR_backend_resource_group_name }}
  TF_VAR_backend_storage_account_name: ${{ vars.TF_VAR_backend_storage_account_name }}
  TF_VAR_backend_container_name: ${{ vars.TF_VAR_backend_container_name }}
  TF_VAR_backend_key_name: ${{ vars.TF_VAR_backend_key_name }}
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  TF_VAR_azure_cluster_name: ${{ vars.TF_VAR_azure_cluster_name }}

jobs:
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.2
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: |
            terraform init \
            -backend-config="resource_group_name=${{ env.TF_VAR_backend_resource_group_name }}" \
            -backend-config="storage_account_name=${{ env.TF_VAR_backend_storage_account_name }}" \
            -backend-config="container_name=${{ env.TF_VAR_backend_container_name }}" \
            -backend-config="key=${{ env.TF_VAR_azure_environment || 'dev' }}/${{ env.TF_VAR_backend_key_name }}.tfstate"

      - name: Terraform Format
        id: format
        run: terraform fmt -recursive

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Refresh
        id: refresh
        run: terraform refresh

      - name: Terraform Plan
        id: plan
        run: terraform plan -lock=false -out=tfplan

      - name: Get timestamp
        id: get-timestamp
        run: |
          echo "TIMESTAMP_PLAN=$(date +'%d-%m-%Y-%H')" >> $GITHUB_ENV

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan_${{ env.TIMESTAMP_PLAN }}
          path: tfplan
          retention-days: 1

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply tfplan