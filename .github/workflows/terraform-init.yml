name: Cluster Manager Init Provisioning

on:
  pull_request:
    branches:
      - master

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_backend_resource_group_name: ${{ vars.TF_VAR_backend_resource_group_name }}
  TF_VAR_backend_storage_account_name: ${{ vars.TF_VAR_backend_storage_account_name }}
  TF_VAR_backend_container_name: ${{ vars.TF_VAR_backend_container_name }}
  TF_VAR_backend_key_name: ${{ vars.TF_VAR_backend_key_name }}
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  TF_VAR_azure_cluster_name: ${{ vars.TF_VAR_azure_cluster_name }}
  TF_VAR_argocd_domain: ${{ vars.TF_VAR_argocd_domain }}

jobs:
  validate_branch:
    name: Validate Source Branch
    runs-on: ubuntu-latest
    steps:
      - name: Check source branch
        run: |
          BRANCH_NAME=${{ github.head_ref }}
          if [[ ! $BRANCH_NAME =~ ^(release|hotfix)\/.*$ ]]; then
            echo "PRs to master are only allowed from release/* or hotfix/* branches. Current branch is: $BRANCH_NAME"
            exit 1
          fi

  setup-and-validate:
    name: Terraform Setup and Validate
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs:
      - validate_branch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.2
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: |
            terraform init \
            -backend-config="resource_group_name=${{ env.TF_VAR_backend_resource_group_name }}" \
            -backend-config="storage_account_name=${{ env.TF_VAR_backend_storage_account_name }}" \
            -backend-config="container_name=${{ env.TF_VAR_backend_container_name }}" \
            -backend-config="key=${{ env.TF_VAR_azure_environment || 'dev' }}/${{ env.TF_VAR_backend_key_name }}.tfstate"

      - name: Terraform Format
        id: format
        run: terraform fmt -recursive

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Refresh
        id: refresh
        run: terraform refresh

      - name: Terraform Plan
        id: plan
        run: terraform plan -lock=false -out=tfplan

      - name: Terraform config output
        id: config-output
        run: | 
          terraform show -no-color tfplan > pr-tfplan.text
          terraform show -json tfplan > pr-tfplan.json

      - name: Notify plan
        uses: ahmadnassri/action-terraform-report@v4
        with:
          terraform-text: ${{ github.workspace }}/pr-tfplan.text
          terraform-json: ${{ github.workspace }}/pr-tfplan.json
          remove-stale-reports: true